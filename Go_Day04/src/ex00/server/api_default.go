/*
 * Candy Server
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package swagger

import (
	"encoding/json"
	"ex00/config"
	"fmt"
	"log"
	"net/http"
)

var candies map[string]int64

func init() {
	var cfg config.Candies
	e := cfg.FillModels()
	if e != nil {
		log.Fatalln(e)
	}
	candies = cfg.GetMapModels()
}

func BuyCandy(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	var post Order
	var resp_bytes []byte
	err := json.NewDecoder(r.Body).Decode(&post)
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}

	if price, ok := candies[post.CandyType]; !ok || post.Money < 0 || post.CandyCount < 0 {
		resp_bytes, _ = json.Marshal(InlineResponse402{Error_: "Invalid input data"})
		w.WriteHeader(402)
	} else if post.Money < price*post.CandyCount {
		delta := price*post.CandyCount - post.Money
		resp_bytes, _ = json.Marshal(InlineResponse400{Error_: fmt.Sprintf("You need %d more money!", delta)})
		w.WriteHeader(400)
	} else if post.Money >= price*post.CandyCount {
		delta := post.Money - price*post.CandyCount
		resp_bytes, _ = json.Marshal(InlineResponse201{Change: int64(delta), Thanks: "thanks"})
		w.WriteHeader(201)
	}
	http.Error(w, string(resp_bytes), http.StatusBadRequest)
}
